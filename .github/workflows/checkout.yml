name: Our Workflow
on: 
  push:
    # main에 대해서만 실행하도록 설정
    branches: [ main ]
#환경 설정 변수
env:
  REPOSITORY_NAME: hello-web:latest
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # jdk 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        # 매개변수 설정
        with:
          java-version: '17'
          distribution: 'temurin'
          
        # 그래들 실행 권한 설정
      - name: 실행권한 설정
        run: chmod +x gradlew
        
      - name: test gradlew
        run: ./gradlew --info test
        
        # 그래들 빌드
      - name: build
        run: ./gradlew bootJar
        # 이미지 생성
      - name: docker image build
        run: docker build -t ${{ secrets.USERNAME }}/${{env.REPOSITORY_NAME}} .
        # 도커 허브 로그인
      - name: docker hub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
        # 도커 허브 푸쉬
      - name: docker hub push
        run: docker push ${{ secrets.USERNAME }}/${{env.REPOSITORY_NAME}}
        
  deploy:
    # build 가 끝나야 실행하도록 설정
    needs: build
    name: 서버에 배포 단계
    runs-on: [ self-hosted, label-me ]
    steps:
    - name: 운영서버에서 docker hub 로그인
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        
    - name: docker-compose에서 이미지 다운로드 및 실행
    # | 를 추가하면 여러개의 명령어를 추가할 수 있다.
      run:  |
        cd ~/helloWeb
        docker-compose down
        docker-compose pull
        docker-compose up -d
    
    